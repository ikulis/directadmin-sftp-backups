--- a/ftp_upload.php	2019-06-20 06:49:28.000000000 +0700
+++ b/ftp_upload.php	2019-07-05 13:17:24.052910490 +0700
@@ -1,4 +1,13 @@
 #!/bin/sh
+# ===========================================================
+# Original script was written by Directadmin
+# ===========================================================
+# Patched:
+#  sFTP/SSH support added
+#  By Alex Grebenschikov, Poralix, www.poralix.com
+#  Last modified: Tue Jan 30 12:43:50 +07 2018
+#  Version: 0.2.poralix $ Fri Jul  5 13:16:22 +07 2019
+# ===========================================================
 FTPPUT=/usr/bin/ncftpput
 CURL=/usr/local/bin/curl
 OS=`uname`;
@@ -14,6 +23,67 @@
 	FTPS=1
 fi
 
+# Poralix
+SSH_SFTP="/usr/bin/sftp";
+[ -x "${SSH_SFTP}" ] || SSH_SFTP="/bin/sftp";
+SSHPASS="/usr/bin/sshpass";
+[ -x "${SSHPASS}" ] || SSHPASS="/bin/sshpass";
+USE_SSH=0;
+SSH_PORTS="22 2200 22022";
+SSH_KEY="";
+for SSH_PORT in ${SSH_PORTS};
+do
+	# Working with SSH?
+	if [ -n "${PORT}" ] && [ "${PORT}" = "${SSH_PORT}" ]; then
+		USE_SSH=1;
+		break;
+	fi;
+done;
+
+upload_file_ssh()
+{
+	# All the binaries installed?
+	if [ ! -x "${SSH_SFTP}" ] || [ ! -x "${SSHPASS}" ]; then
+		echo "";
+		echo "*** Backup not uploaded ***";
+		echo "Can not find SFTP and/or SSHPASS binaries";
+		echo "";
+		echo "Please install sftp and/or sshpass using OS repository";
+		echo "";
+		exit 10;
+	fi;
+	
+	# Use SSH KEY?
+	if [ -n "${ftp_password}" ] && [ -f "${ftp_password}" ]; then
+		ssh-keygen -P '' -e -y -f "${ftp_password}" >/dev/null 2>&1; 
+		if [ "$?" = "0" ]; then
+			SSH_KEY="${ftp_password}";
+		fi;
+	fi;
+	
+	TMP_BATCH_FILE=$(mktemp);
+	#echo "progress" >> ${TMP_BATCH_FILE};
+	[ -n "${ftp_path}" ] && echo "-mkdir ${ftp_path}" >> ${TMP_BATCH_FILE};
+	echo "cd ${ftp_path}" >> ${TMP_BATCH_FILE};
+	echo "put ${ftp_local_file} ${ftp_path}" >> ${TMP_BATCH_FILE};
+	echo "quit" >> ${TMP_BATCH_FILE};
+	
+	if [ -z "${SSH_KEY}" ]; then
+		echo "${ftp_password}" >> ${CFG};
+		${SSHPASS} -f${CFG} ${SSH_SFTP} -C -oBatchMode=no -b ${TMP_BATCH_FILE} -oUserKnownHostsFile=/dev/null -oStrictHostKeyChecking=no -oPort=${PORT} ${ftp_username}@${ftp_ip} >/dev/null 2>&1;
+	else
+		${SSH_SFTP} -C -oBatchMode=no -b ${TMP_BATCH_FILE} -oUserKnownHostsFile=/dev/null -oStrictHostKeyChecking=no -oPort=${PORT} -oIdentityFile=${SSH_KEY} ${ftp_username}@${ftp_ip} >/dev/null 2>&1;
+	fi;
+	RET=$?;
+	
+	[ -f "${TMP_BATCH_FILE}" ] && rm -f ${TMP_BATCH_FILE};
+	
+	if [ "${RET}" -ne 0 ]; then
+		echo "[upload] sftp return code: $RET";
+	fi
+}
+# Poralix
+
 #######################################################
 # SETUP
 
@@ -180,11 +250,15 @@
 #######################################################
 # Start
 
-if [ "${FTPS}" = "1" ]; then
-	upload_file_ftps
+if [ "${USE_SSH}" = "1" ]; then
+	upload_file_ssh;
 else
-	upload_file
-fi
+	if [ "${FTPS}" = "1" ]; then
+		upload_file_ftps
+	else
+		upload_file
+	fi
+fi;
 
 if [ "${RET}" = "0" ] && [ "${MD5}" = "1" ]; then
 	MD5_FILE=${ftp_local_file}.md5
@@ -195,11 +269,15 @@
 		ftp_local_file=${MD5_FILE}
 		ftp_remote_file=${ftp_remote_file}.md5
 
-		if [ "${FTPS}" = "1" ]; then
-			upload_file_ftps
+		if [ "${USE_SSH}" = "1" ]; then
+			upload_file_ssh;
 		else
-			upload_file
-		fi
+			if [ "${FTPS}" = "1" ]; then
+				upload_file_ftps
+			else
+				upload_file
+			fi
+		fi;
 	fi
 fi
 
